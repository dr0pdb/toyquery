name: Ubuntu

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  BUILD_TYPE: Release
  INSTALL_LOCATION: .local

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[ci skip]')"

    steps:
      - uses: actions/checkout@v2

      - name: cache dependencies
        uses: actions/cache@v2
        id: cache
        with:
          path: ${{ github.workspace }}/${{ env.INSTALL_LOCATION }}
          key: ${{ runner.os }}-dependencies

      - name: install GoogleTest
        if: ${{ steps.cache.output.cache-hit != 'true' }}
        run: |
          cd ..
          git clone https://github.com/google/googletest.git --branch release-1.10.0
          cd googletest
          cmake -Bbuild -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/$INSTALL_LOCATION
          cmake --build build --config Release
          cmake --build build --target install --config Release

      - name: install Doxygen
        if: ${{ steps.cache.output.cache-hit != 'true' }}
        run: |
          sudo apt-get install doxygen

      - name: install Apache Arrow
        if: ${{ steps.cache.output.cache-hit != 'true' }}
        run: |
          cd ..
          sudo apt update
          sudo apt install -y -V ca-certificates lsb-release wget
          wget https://apache.jfrog.io/artifactory/arrow/$(lsb_release --id --short | tr 'A-Z' 'a-z')/apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb
          sudo apt install -y -V ./apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb
          sudo apt update
          sudo apt install -y -V libarrow-dev # For C++
          sudo apt install -y -V libarrow-glib-dev # For GLib (C)
          sudo apt install -y -V libarrow-dataset-dev # For Apache Arrow Dataset C++
          sudo apt install -y -V libarrow-flight-dev # For Apache Arrow Flight C++
          sudo apt install -y -V libparquet-dev # For Apache Parquet C++
          sudo apt install -y -V libparquet-glib-dev # For Apache Parquet GLib (C)

      - name: configure
        run: cmake -Bbuild -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/$INSTALL_LOCATION -DToyquery_ENABLE_CODE_COVERAGE=1

      - name: build
        run: cmake --build build --config $BUILD_TYPE -j4

      - name: run tests
        run: |
          cd build
          ctest -C $BUILD_TYPE -VV

      - name: Code coverage using Codecov
        run: bash <(curl -s https://codecov.io/bash)

      - name: install project
        run: cmake --build build --target install --config Release
